<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.ssafy.home.estate.mapper.EstateMapper">

	<resultMap id="aptName" type="houseInfo">
		<result column="apartmentName" property="apartmentName" />
		<result column="aptCode" property="aptCode" />
	</resultMap>

	<resultMap type="aptTradeInfoDto" id="aptInfo" extends="aptName">
		<result column="buildYear" property="buildYear" />
		<result column="dongCode" property="dongCode" />
		<result column="lng" property="lng" />
		<result column="lat" property="lat" />
		<result column="dong" property="dong" />
		<result column="dealAmount" property="price" />
		<result column="dealYear" property="dealYear" />
		<result column="dealMonth" property="dealMonth" />
		<result column="dealDay" property="dealDay" />
		<result column="area" property="area" />
		<result column="floor" property="floor" />
	</resultMap>

	<resultMap type="dongCode" id="dongCodeInfo">

	</resultMap>

	<resultMap id="aptSimpleInfo" type="AptSimpleInfoDto">
		<result column="aptCode" property="aptCode" />
		<result column="dongCode" property="dongCode" />
		<result column="buildyear" property="buildyear" />
		<result column="apartmentName" property="apartmentName" />
		<result column="lng" property="lng" />
		<result column="lat" property="lat" />
	</resultMap>

	<resultMap id="bStationName" type="busStation">
		<result column="id" property="id"/>
		<result column="name" property="name"/>
	</resultMap>

	<resultMap id="sStationName" type="subwayStation">
		<result column="id" property="id"/>
		<result column="name" property="name"/>
	</resultMap>

	<resultMap id="businessName" type="Business">
		<result column="id" property="pk"/>
		<result column="name" property="name"/>
	</resultMap>

	<resultMap id="estateName" type="RealEstate">
		<result column="id" property="id"/>
		<result column="name" property="name"/>
	</resultMap>
<!--	<resultMap id="interest" type="interest">-->
<!--		<result column="interestcol" property="interestcol" />-->
<!--		<result column="dongCode" property="dongCode" />-->
<!--	</resultMap>-->

	<resultMap id="simpleApartData" type="simpleBuildingDto">
		<result column="aptCode" property="pk" />
		<result column="apartmentName" property="name" />
		<result column="distance" property="distance" />
	</resultMap>

	<select id="getAptTradeListByOption" parameterType="map"
		resultMap="aptInfo">
		select hi.apartmentName, hi.aptCode, hi.buildYear, hi.dongCode,
		hi.lng, hi.lat, hi.dong, hd.dealAmount, hd.dealYear, hd.dealMonth,
		hd.dealDay, hd.area, hd.floor
		from (
		select *
		from houseinfo
		<where>
			dongCode in
			(
			select dongCode
			from dongcode
			<where>
				<choose>
					<when test="dong != null">
						dongName = #{dong}
					</when>
					<when test="gugun != null">
						gugunName = #{gugun}
					</when>
					<when test="si != null">
						sidoName = #{si}
					</when>
					<otherwise>
					</otherwise>
				</choose>
			</where>
			)
			<if test="keyword != null">
				and apartmentName like concat('%', #{keyword}, '%')
			</if>
		</where>
		) hi join
		(
		select *
		from housedeal
		<where>
			<if test="startyear != null">
				and dealYear >= #{startyear}
			</if>
			<if test="startmonth != null">
				and dealmonth >= #{startmonth}
			</if>
				<if test="endyear != null">
					and dealYear<![CDATA[<]]>=#{endyear}
				</if>
				<if test="endmonth != null">
					and dealmonth<![CDATA[<]]>=#{endmonth}
				</if>
		</where>
		) hd on (hi.aptCode = hd.aptCode)

	</select>

	<select id="getSiList" resultType="string">
		select distinct sidoName
		from
		dongcode;
	</select>

	<select id="getGuGunList" resultType="string">
		select distinct gugunName
		from dongcode
		where gugunName is not null and sidoName like concat('%',
		#{si}, '%')
	</select>

	<select id="getDongList" parameterType="map" resultType="string">
		select dongName
		from dongcode
		where dongName is not null and gugunName =
		#{gugun} and sidoName = #{si}
		<!-- <include refid="search"></include> -->
	</select>

	<select id="getInterestLocation" parameterType="string"
		resultMap="dongCodeInfo">
		select * from dongcode where dongCode in
		(
		SELECT dongCode
		FROM interest
		where user_id = #{userId}
		);
	</select>

	<select id="getAptListByOption" parameterType="int" resultMap="aptSimpleInfo">
		select *
		from houseinfo
		where dongCode = #{dongCode}
	</select>

	<select id="getBusStationByKeywordAndLimit" parameterType="map" resultMap="bStationName">
		select id, name
		from bus_station
		where name like concat(#{keyword}, '%')
		order by CHAR_LENGTH(name) ASC
		LIMIT #{limit};
	</select>

	<select id="getSubwayStationByKeywordAndLimit" parameterType="map" resultMap="sStationName">
		select id, name
		from subway_station
		where name like concat(#{keyword}, '%')
		order by CHAR_LENGTH(name) ASC
		LIMIT #{limit};
	</select>

	<select id="getAptByKeywordAndLimit" parameterType="map" resultMap="aptName">
		select aptCode, apartmentName
		from houseinfo
		where apartmentName like concat(#{keyword}, '%')
		order by CHAR_LENGTH(apartmentName) ASC
		LIMIT #{limit};
	</select>

	<select id="getBusinessByKeywordAndLimit" parameterType="map" resultMap="businessName">
		select id, name
		from business
		where name like concat(#{keyword}, '%')
		order by CHAR_LENGTH(name) ASC
		LIMIT #{limit};
	</select>

	<select id="getEstateByKeywordAndLimit" parameterType="map" resultMap="estateName">
		select id, name
		from real_estate
		where name like concat(#{keyword}, '%')
		order by CHAR_LENGTH(name) ASC
		LIMIT #{limit};
	</select>

	<select id="getInterestList" parameterType="string" resultType="String">
		select dongCode
		from interest
		where user_id = #{userId}
	</select>
	<insert id="addInterestLocation" parameterType="map">
		insert into interest(user_id, dongCode)
		values (#{userId}, #{dongCode});
	</insert>

	<delete id="deleteInterestLocation" parameterType="map">
		delete
		from interest
		where user_id = #{userId} and dongCode = #{dongCode}
	</delete>

	<select id="getAptListByLocation" parameterType="map" resultMap="simpleApartData">
		SELECT aptCode, apartmentName, ROUND(ST_Distance_Sphere(Point(#{lng},#{lat}), POINT(lng, lat))) AS distance
		FROM houseinfo
		WHERE ST_Distance_Sphere(Point(#{lng},#{lat}), POINT(lng, lat)) <![CDATA[<]]> #{distance}
		ORDER BY distance;
	</select>
</mapper>